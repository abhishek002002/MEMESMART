{"ast":null,"code":"var _jsxFileName = \"/home/abhishekagrawal/devolopement workspace/memes/frontend/src/components/listmemes.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Listmemes() {\n  _s();\n\n  const [memes, setMemes] = useState([]);\n\n  const deleteMeme = async () => {\n    try {\n      const deleteMeme = await fetch(`http://localhost:5000/memes/${id}`, {\n        method: \"DELETE\"\n      });\n      console.log(deletememe);\n    } catch (err) {\n      console.error(srr.message);\n    }\n  };\n\n  const getmemes = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/memes\");\n      const jsonData = await response.json();\n      setMemes(jsonData); // console.log(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getmemes();\n  }, []); // console.log(memes);\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table mt-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: memes.map(meme => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: meme.meme_author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => deletememe(meme.meme_id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, meme.meme_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Listmemes, \"5gdHCcF3c1u3tVEy6qXr88dpXdk=\");\n\n_c = Listmemes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listmemes\");","map":{"version":3,"sources":["/home/abhishekagrawal/devolopement workspace/memes/frontend/src/components/listmemes.js"],"names":["React","Fragment","useEffect","useState","Listmemes","memes","setMemes","deleteMeme","fetch","id","method","console","log","deletememe","err","error","srr","message","getmemes","response","jsonData","json","map","meme","meme_author","meme_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMI,UAAU,GAAG,YAAW;AAC1B,QAAG;AACA,YAAMA,UAAU,GAAG,MAAMC,KAAK,CAAE,+BAA8BC,EAAG,EAAnC,EAAqC;AAC/DC,QAAAA,MAAM,EAAE;AADuD,OAArC,CAA9B;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ;AACF,KALD,CAKC,OAAMC,GAAN,EAAU;AACPH,MAAAA,OAAO,CAACI,KAAR,CAAcC,GAAG,CAACC,OAAlB;AACH;AACJ,GATD;;AAWA,QAAMC,QAAQ,GAAG,YAAY;AAC1B,QAAI;AACH,YAAMC,QAAQ,GAAG,MAAMX,KAAK,CAAC,6BAAD,CAA5B;AACA,YAAMY,QAAQ,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAvB;AAEAf,MAAAA,QAAQ,CAACc,QAAD,CAAR,CAJG,CAKH;AACA,KAND,CAME,OAAMN,GAAN,EAAU;AACRH,MAAAA,OAAO,CAACI,KAAR,CAAcD,GAAG,CAACG,OAAlB;AACH;AACH,GAVD;;AAWAf,EAAAA,SAAS,CAAC,MAAI;AACVgB,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT,CAzBgC,CA4BhC;;AACA,sBACA,QAAC,QAAD;AAAA,eACK,GADL,eAEI;AAAO,MAAA,KAAK,EAAC,wBAAb;AAAA,8BACG;AAAA,+BACK;AAAA,kCACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFH,eAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,cADH,eAQI;AAAA,kBAMKb,KAAK,CAACiB,GAAN,CAAUC,IAAI,iBACX;AAAA,kCACI;AAAA,sBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,mCACI;AACG,cAAA,SAAS,EAAC,gBADb;AAEG,cAAA,OAAO,EAAE,MAAKX,UAAU,CAACU,IAAI,CAACE,OAAN,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,WAASF,IAAI,CAACE,OAAd;AAAA;AAAA;AAAA;AAAA,gBADH;AANL;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAmCH;;GAhEuBrB,S;;KAAAA,S","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\n\nexport default function Listmemes() {\n    const [memes, setMemes] = useState([]);\n\n    const deleteMeme = async () =>{\n        try{\n           const deleteMeme = await fetch(`http://localhost:5000/memes/${id}`,{\n               method: \"DELETE\"\n           });\n           console.log(deletememe);\n        }catch(err){\n            console.error(srr.message);\n        }\n    }\n\n    const getmemes = async () => {\n       try {\n        const response = await fetch(\"http://localhost:5000/memes\");\n        const jsonData = await response.json();\n\n        setMemes(jsonData);\n        // console.log(jsonData);\n       } catch(err){\n           console.error(err.message);\n       }\n    };\n    useEffect(()=>{\n        getmemes();\n    }, []);\n    // console.log(memes);\n    return(\n    <Fragment> \n        {\" \"}\n        <table class=\"table mt-5 text-center\">\n           <thead>\n                <tr>\n                   <th>Description</th> \n                   <th>Edit</th>\n                   <th>Delete</th>\n                </tr>\n            </thead>\n            <tbody>\n                {/* <tr>\n                    <td>John</td>\n                    <td>Doe</td>\n                    <td>john@example.com</td>\n                </tr>*/}\n                {memes.map(meme =>(\n                    <tr key={meme.meme_id}>\n                        <td>{meme.meme_author}</td>\n                        <td>Edit</td>\n                        <td>\n                            <button \n                               className=\"btn btn-danger\"\n                               onClick={()=> deletememe(meme.meme_id)}\n                            >\n                                Delete\n                            </button>\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    </Fragment>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}