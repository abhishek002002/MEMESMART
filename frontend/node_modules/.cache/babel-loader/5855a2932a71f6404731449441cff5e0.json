{"ast":null,"code":"var _jsxFileName = \"/home/abhishekagrawal/devolopement workspace/memes/frontend/src/components/listmemes.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport Editmemes from \"./editmeme\";\nimport { Grid } from \"@material-ui/core\";\nimport MemeCard from \"./memecard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Listmemes() {\n  _s();\n\n  const [memes, setMemes] = useState([]);\n\n  const getmemes = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/memes\");\n      const jsonData = await response.json();\n      setMemes(jsonData); // console.log(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getmemes();\n  }, []); // console.log(memes);\n\n  const getMemeCard = (meme, idx) => {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        lg: 4,\n        children: [/*#__PURE__*/_jsxDEV(MemeCard, {\n          meme: meme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: /*#__PURE__*/_jsxDEV(Editmemes, {\n            meme: meme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => deleteMeme(meme.meme_id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: memes.map((meme, idx) => getMemeCard(meme, idx))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Listmemes, \"5gdHCcF3c1u3tVEy6qXr88dpXdk=\");\n\n_c = Listmemes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listmemes\");","map":{"version":3,"sources":["/home/abhishekagrawal/devolopement workspace/memes/frontend/src/components/listmemes.js"],"names":["React","Fragment","useEffect","useState","Editmemes","Grid","MemeCard","Listmemes","memes","setMemes","getmemes","response","fetch","jsonData","json","err","console","error","message","getMemeCard","meme","idx","deleteMeme","meme_id","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,QAAP,MAAoB,YAApB;;AAGA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AAIA,QAAMO,QAAQ,GAAG,YAAY;AAC1B,QAAI;AACH,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA5B;AACA,YAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AAEAL,MAAAA,QAAQ,CAACI,QAAD,CAAR,CAJG,CAKH;AACA,KAND,CAME,OAAME,GAAN,EAAU;AACRC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACH;AACH,GAVD;;AAWAhB,EAAAA,SAAS,CAAC,MAAI;AACVQ,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT,CAhBgC,CAmBhC;;AAEA,QAAMS,WAAW,GAAG,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC/B,wBACI,QAAC,QAAD;AAAA,6BACA,QAAC,IAAD;AAAkB,QAAA,IAAI,MAAtB;AAAuB,QAAA,EAAE,EAAI,EAA7B;AAAiC,QAAA,EAAE,EAAI,CAAvC;AAA0C,QAAA,EAAE,EAAI,CAAhD;AAAA,gCACI,QAAC,QAAD;AAAU,UAAA,IAAI,EAAED;AAAhB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,iCAAI,QAAC,SAAD;AAAW,YAAA,IAAI,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGA;AAAA,iCACI;AACG,YAAA,SAAS,EAAC,gBADb;AAEG,YAAA,OAAO,EAAE,MAAKE,UAAU,CAACF,IAAI,CAACG,OAAN,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA,SAAaF,GAAb;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH,GAjBD;;AAmBA,sBACA,QAAC,QAAD;AAAA,eACK,GADL,eAEI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,gBACSb,KAAK,CAACgB,GAAN,CAAU,CAACJ,IAAD,EAAMC,GAAN,KAAcF,WAAW,CAACC,IAAD,EAAMC,GAAN,CAAnC;AADT;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAQH;;GAhDuBd,S;;KAAAA,S","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\nimport Editmemes from \"./editmeme\";\nimport { Grid } from \"@material-ui/core\";\nimport MemeCard from\"./memecard\";\n\n\nexport default function Listmemes() {\n    const [memes, setMemes] = useState([]);\n\n    \n\n    const getmemes = async () => {\n       try {\n        const response = await fetch(\"http://localhost:5000/memes\");\n        const jsonData = await response.json();\n\n        setMemes(jsonData);\n        // console.log(jsonData);\n       } catch(err){\n           console.error(err.message);\n       }\n    };\n    useEffect(()=>{\n        getmemes();\n    }, []);\n    // console.log(memes);\n\n    const getMemeCard = (meme, idx) => {\n        return (\n            <Fragment>\n            <Grid key = {idx} item xs = {12} sm = {6} lg = {4} >\n                <MemeCard meme={meme}/>\n                <h1><Editmemes meme={meme}/></h1>\n            <h1>\n                <button \n                   className=\"btn btn-danger\"\n                   onClick={()=> deleteMeme(meme.meme_id)}\n                >\n                    Delete\n                </button>\n            </h1>\n            </Grid>\n            </Fragment>\n        );\n    }\n\n    return(\n    <Fragment> \n        {\" \"}\n        <Grid container spacing={2}>\n                {memes.map((meme,idx) =>(getMemeCard(meme,idx)))}\n        </Grid>\n    </Fragment>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}