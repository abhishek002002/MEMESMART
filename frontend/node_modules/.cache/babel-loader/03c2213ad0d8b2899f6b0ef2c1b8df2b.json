{"ast":null,"code":"var _jsxFileName = \"/home/abhishekagrawal/devolopement workspace/memes/frontend/src/components/listmemes.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport Editmemes from \"./editmeme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Listmemes() {\n  _s();\n\n  const [memes, setMemes] = useState([]);\n\n  const deleteMeme = async id => {\n    try {\n      const deleteMeme = await fetch(`http://localhost:5000/memes/${id}`, {\n        method: \"DELETE\"\n      });\n      setMemes(memes.filter(meme => meme.meme_id !== id));\n      console.log(deleteMeme);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const getmemes = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/memes\");\n      const jsonData = await response.json();\n      setMemes(jsonData); // console.log(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getmemes();\n  }, []); // console.log(memes);\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table mt-5 text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: memes.map(meme => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card\",\n            style: {\n              width: 18\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: meme.meme_author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: meme.meme_caption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: /*#__PURE__*/_jsxDEV(Editmemes, {\n              meme: meme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => deleteMeme(meme.meme_id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, meme.meme_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Listmemes, \"5gdHCcF3c1u3tVEy6qXr88dpXdk=\");\n\n_c = Listmemes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listmemes\");","map":{"version":3,"sources":["/home/abhishekagrawal/devolopement workspace/memes/frontend/src/components/listmemes.js"],"names":["React","Fragment","useEffect","useState","Editmemes","Listmemes","memes","setMemes","deleteMeme","id","fetch","method","filter","meme","meme_id","console","log","err","error","message","getmemes","response","jsonData","json","map","width","meme_author","meme_caption"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMK,UAAU,GAAG,MAAMC,EAAN,IAAW;AAC1B,QAAG;AACA,YAAMD,UAAU,GAAG,MAAME,KAAK,CAAE,+BAA8BD,EAAG,EAAnC,EAAqC;AAC/DE,QAAAA,MAAM,EAAE;AADuD,OAArC,CAA9B;AAGAJ,MAAAA,QAAQ,CAACD,KAAK,CAACM,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,OAAL,KAAeL,EAApC,CAAD,CAAR;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ;AACF,KAND,CAMC,OAAMS,GAAN,EAAU;AACPF,MAAAA,OAAO,CAACG,KAAR,CAAcD,GAAG,CAACE,OAAlB;AACH;AACJ,GAVD;;AAYA,QAAMC,QAAQ,GAAG,YAAY;AAC1B,QAAI;AACH,YAAMC,QAAQ,GAAG,MAAMX,KAAK,CAAC,6BAAD,CAA5B;AACA,YAAMY,QAAQ,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAvB;AAEAhB,MAAAA,QAAQ,CAACe,QAAD,CAAR,CAJG,CAKH;AACA,KAND,CAME,OAAML,GAAN,EAAU;AACRF,MAAAA,OAAO,CAACG,KAAR,CAAcD,GAAG,CAACE,OAAlB;AACH;AACH,GAVD;;AAWAjB,EAAAA,SAAS,CAAC,MAAI;AACVkB,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT,CA1BgC,CA6BhC;;AACA,sBACA,QAAC,QAAD;AAAA,eACK,GADL,eAEI;AAAO,MAAA,SAAS,EAAC,wBAAjB;AAAA,6BAEI;AAAA,kBACKd,KAAK,CAACkB,GAAN,CAAUX,IAAI,iBACX;AAAA,kCACI;AAAK,YAAA,KAAK,EAAC,MAAX;AAAkB,YAAA,KAAK,EAAE;AAACY,cAAAA,KAAK,EAAE;AAAR;AAAzB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAKZ,IAAI,CAACa;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sBAAKb,IAAI,CAACc;AAAV;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA,mCAAI,QAAC,SAAD;AAAW,cAAA,IAAI,EAAEd;AAAjB;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA,mCACI;AACG,cAAA,SAAS,EAAC,gBADb;AAEG,cAAA,OAAO,EAAE,MAAKL,UAAU,CAACK,IAAI,CAACC,OAAN,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA,WAASD,IAAI,CAACC,OAAd;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AA0BH;;GAxDuBT,S;;KAAAA,S","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\nimport Editmemes from \"./editmeme\";\n\nexport default function Listmemes() {\n    const [memes, setMemes] = useState([]);\n\n    const deleteMeme = async id =>{\n        try{\n           const deleteMeme = await fetch(`http://localhost:5000/memes/${id}`,{\n               method: \"DELETE\"\n           });\n           setMemes(memes.filter(meme => meme.meme_id!==id));\n           console.log(deleteMeme);\n        }catch(err){\n            console.error(err.message);\n        }\n    }\n\n    const getmemes = async () => {\n       try {\n        const response = await fetch(\"http://localhost:5000/memes\");\n        const jsonData = await response.json();\n\n        setMemes(jsonData);\n        // console.log(jsonData);\n       } catch(err){\n           console.error(err.message);\n       }\n    };\n    useEffect(()=>{\n        getmemes();\n    }, []);\n    // console.log(memes);\n    return(\n    <Fragment> \n        {\" \"}\n        <table className=\"table mt-5 text-center\">\n           \n            <tbody>\n                {memes.map(meme =>(\n                    <tr key={meme.meme_id}>\n                        <div class=\"card\" style={{width: 18}}></div>\n                        <h1>{meme.meme_author}</h1>\n                        <h1>{meme.meme_caption}</h1>\n                        <h1><Editmemes meme={meme}/></h1>\n                        <h1>\n                            <button \n                               className=\"btn btn-danger\"\n                               onClick={()=> deleteMeme(meme.meme_id)}\n                            >\n                                Delete\n                            </button>\n                        </h1>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    </Fragment>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}