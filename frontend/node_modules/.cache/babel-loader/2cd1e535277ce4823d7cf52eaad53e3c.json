{"ast":null,"code":"var _jsxFileName = \"/home/abhishekagrawal/devolopement workspace/memes/frontend/src/components/edit.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport * as Yup from 'yup';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  btnstyle: {\n    margin: '8px 0'\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  alignment: {\n    justifyItems: 'center'\n  }\n}));\nexport default function FormDialog({\n  meme\n}) {\n  _s();\n\n  const classes = useStyles();\n\n  const deleteMeme = async id => {\n    try {\n      const deleteMeme = await fetch(`http://localhost:5000/memes/${id}`, {\n        method: \"DELETE\"\n      });\n      setMemes(memes.filter(meme => meme.meme_id !== id));\n      console.log(deleteMeme);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justify: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleClickOpen,\n      className: classes.button,\n      endIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 119\n      }, this),\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: () => deleteMeme(meme.meme_id),\n      className: classes.button,\n      endIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 135\n      }, this),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormDialog, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = FormDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormDialog\");","map":{"version":3,"sources":["/home/abhishekagrawal/devolopement workspace/memes/frontend/src/components/edit.js"],"names":["React","Button","TextField","Dialog","DialogContent","makeStyles","DialogContentText","DialogTitle","Grid","Yup","EditIcon","DeleteIcon","useStyles","theme","btnstyle","margin","button","spacing","alignment","justifyItems","FormDialog","meme","classes","deleteMeme","id","fetch","method","setMemes","memes","filter","meme_id","console","log","err","error","message","handleClickOpen"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAAEQ,KAAD,KAAY;AACrCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,MAAM,EAAE;AADF,GAD2B;AAKrCC,EAAAA,MAAM,EAAE;AACJD,IAAAA,MAAM,EAAEF,KAAK,CAACI,OAAN,CAAc,CAAd;AADJ,GAL6B;AAQrCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,YAAY,EAAE;AADP;AAR0B,CAAZ,CAAD,CAA5B;AAcA,eAAe,SAASC,UAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAA8B;AAAA;;AAEzC,QAAMC,OAAO,GAAGV,SAAS,EAAzB;;AAEA,QAAMW,UAAU,GAAG,MAAMC,EAAN,IAAW;AAC1B,QAAG;AACA,YAAMD,UAAU,GAAG,MAAME,KAAK,CAAE,+BAA8BD,EAAG,EAAnC,EAAqC;AAC/DE,QAAAA,MAAM,EAAE;AADuD,OAArC,CAA9B;AAGAC,MAAAA,QAAQ,CAACC,KAAK,CAACC,MAAN,CAAaR,IAAI,IAAIA,IAAI,CAACS,OAAL,KAAeN,EAApC,CAAD,CAAR;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYT,UAAZ;AACF,KAND,CAMC,OAAMU,GAAN,EAAU;AACPF,MAAAA,OAAO,CAACG,KAAR,CAAcD,GAAG,CAACE,OAAlB;AACH;AACJ,GAVD;;AAWF,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,QAAxB;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,OAAO,EAAEC,eAArD;AAAsE,MAAA,SAAS,EAAId,OAAO,CAACN,MAA3F;AAAmG,MAAA,OAAO,eAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,WAAlC;AAA8C,MAAA,OAAO,EAAE,MAAKO,UAAU,CAACF,IAAI,CAACS,OAAN,CAAtE;AAAsF,MAAA,SAAS,EAAIR,OAAO,CAACN,MAA3G;AAAmH,MAAA,OAAO,eAAI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAzBuBI,U;UAEJR,S;;;KAFIQ,U","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport * as Yup from 'yup'\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles((theme) => ({\n    btnstyle: {\n        margin: '8px 0'\n    },\n\n    button: {\n        margin: theme.spacing(1),\n    },\n    alignment: {\n        justifyItems: 'center'\n    }\n}));\n\n \nexport default function FormDialog ({ meme }){\n\n    const classes = useStyles();\n\n    const deleteMeme = async id =>{\n        try{\n           const deleteMeme = await fetch(`http://localhost:5000/memes/${id}`,{\n               method: \"DELETE\"\n           });\n           setMemes(memes.filter(meme => meme.meme_id!==id));\n           console.log(deleteMeme);\n        }catch(err){\n            console.error(err.message);\n        }\n    }\n  return (\n    <Grid container justify=\"center\">\n        <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen} className = {classes.button} endIcon = {<EditIcon />}>\n            Edit\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\" onClick={()=> deleteMeme(meme.meme_id)} className = {classes.button} endIcon = {<DeleteIcon />}>\n            Delete\n        </Button>\n    </Grid>\n  );\n}"]},"metadata":{},"sourceType":"module"}