{"ast":null,"code":"var _jsxFileName = \"/home/abhishekagrawal/devolopement workspace/memes/frontend/src/components/listmemes.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport Editmemes from \"./editmeme\";\nimport { Grid } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport MemeCard from \"./memecard\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  btnstyle: {\n    margin: '8px 0'\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  alignment: {\n    justifyItems: 'center'\n  }\n}));\nexport default function Listmemes() {\n  _s();\n\n  const [memes, setMemes] = useState([]);\n  const classes = useStyles();\n\n  const deleteMeme = async id => {\n    try {\n      const deleteMeme = await fetch(`http://localhost:5000/memes/${id}`, {\n        method: \"DELETE\"\n      });\n      setMemes(memes.filter(meme => meme.meme_id !== id));\n      console.log(deleteMeme);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const getmemes = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/memes\");\n      const jsonData = await response.json();\n      setMemes(jsonData); // console.log(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getmemes();\n  }, []); // console.log(memes);\n\n  const getMemeCard = (meme, idx) => {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(MemeCard, {\n          meme: meme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(Editmemes, {\n          meme: meme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.button,\n          endIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 101\n          }, this),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: () => deleteMeme(meme.meme_id),\n          className: classes.button,\n          endIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 143\n          }, this),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: memes.map((meme, idx) => getMemeCard(meme, idx))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Listmemes, \"GPSoLFmxZIv3i1+RpWjfR5Ro7CM=\", false, function () {\n  return [useStyles];\n});\n\n_c = Listmemes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listmemes\");","map":{"version":3,"sources":["/home/abhishekagrawal/devolopement workspace/memes/frontend/src/components/listmemes.js"],"names":["React","Fragment","useEffect","useState","Editmemes","Grid","Button","MemeCard","EditIcon","DeleteIcon","useStyles","makeStyles","theme","btnstyle","margin","button","spacing","alignment","justifyItems","Listmemes","memes","setMemes","classes","deleteMeme","id","fetch","method","filter","meme","meme_id","console","log","err","error","message","getmemes","response","jsonData","json","getMemeCard","idx","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,QAAP,MAAoB,YAApB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,MAAMC,SAAS,GAAGC,UAAU,CAAEC,KAAD,KAAY;AACrCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,MAAM,EAAE;AADF,GAD2B;AAKrCC,EAAAA,MAAM,EAAE;AACJD,IAAAA,MAAM,EAAEF,KAAK,CAACI,OAAN,CAAc,CAAd;AADJ,GAL6B;AAQrCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,YAAY,EAAE;AADP;AAR0B,CAAZ,CAAD,CAA5B;AAeA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMmB,OAAO,GAAGZ,SAAS,EAAzB;;AACA,QAAMa,UAAU,GAAG,MAAMC,EAAN,IAAW;AAC1B,QAAG;AACA,YAAMD,UAAU,GAAG,MAAME,KAAK,CAAE,+BAA8BD,EAAG,EAAnC,EAAqC;AAC/DE,QAAAA,MAAM,EAAE;AADuD,OAArC,CAA9B;AAGAL,MAAAA,QAAQ,CAACD,KAAK,CAACO,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,OAAL,KAAeL,EAApC,CAAD,CAAR;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ;AACF,KAND,CAMC,OAAMS,GAAN,EAAU;AACPF,MAAAA,OAAO,CAACG,KAAR,CAAcD,GAAG,CAACE,OAAlB;AACH;AACJ,GAVD;;AAYA,QAAMC,QAAQ,GAAG,YAAY;AAC1B,QAAI;AACH,YAAMC,QAAQ,GAAG,MAAMX,KAAK,CAAC,6BAAD,CAA5B;AACA,YAAMY,QAAQ,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAvB;AAEAjB,MAAAA,QAAQ,CAACgB,QAAD,CAAR,CAJG,CAKH;AACA,KAND,CAME,OAAML,GAAN,EAAU;AACRF,MAAAA,OAAO,CAACG,KAAR,CAAcD,GAAG,CAACE,OAAlB;AACH;AACH,GAVD;;AAWAhC,EAAAA,SAAS,CAAC,MAAI;AACViC,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT,CA1BgC,CA6BhC;;AAEA,QAAMI,WAAW,GAAG,CAACX,IAAD,EAAOY,GAAP,KAAe;AAC/B,wBACI,QAAC,QAAD;AAAA,8BACA,QAAC,IAAD;AAAkB,QAAA,IAAI,MAAtB;AAAuB,QAAA,EAAE,EAAI,EAA7B;AAAiC,QAAA,EAAE,EAAI,CAAvC;AAA0C,QAAA,EAAE,EAAI,CAAhD;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEZ;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ,SAAaY,GAAb;AAAA;AAAA;AAAA;AAAA,cADA,eAIA;AAAA,+BAAI,QAAC,SAAD;AAAW,UAAA,IAAI,EAAEZ;AAAjB;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,cAJA,eAKA,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAC,QAAxB;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,KAAK,EAAC,SAAlC;AAA4C,UAAA,SAAS,EAAIN,OAAO,CAACP,MAAjE;AAAyE,UAAA,OAAO,eAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,KAAK,EAAC,WAAlC;AAA8C,UAAA,OAAO,EAAE,MAAKQ,UAAU,CAACK,IAAI,CAACC,OAAN,CAAtE;AAAsF,UAAA,SAAS,EAAIP,OAAO,CAACP,MAA3G;AAAmH,UAAA,OAAO,eAAI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH,GAjBD;;AAmBA,sBACA,QAAC,QAAD;AAAA,eACK,GADL,eAEI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,gBACSK,KAAK,CAACqB,GAAN,CAAU,CAACb,IAAD,EAAMY,GAAN,KAAcD,WAAW,CAACX,IAAD,EAAMY,GAAN,CAAnC;AADT;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAQH;;GA1DuBrB,S;UAEJT,S;;;KAFIS,S","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\nimport Editmemes from \"./editmeme\";\n\nimport { Grid } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport MemeCard from\"./memecard\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles((theme) => ({\n    btnstyle: {\n        margin: '8px 0'\n    },\n\n    button: {\n        margin: theme.spacing(1),\n    },\n    alignment: {\n        justifyItems: 'center'\n    }\n}));\n\n\n\nexport default function Listmemes() {\n    const [memes, setMemes] = useState([]);\n    const classes = useStyles();\n    const deleteMeme = async id =>{\n        try{\n           const deleteMeme = await fetch(`http://localhost:5000/memes/${id}`,{\n               method: \"DELETE\"\n           });\n           setMemes(memes.filter(meme => meme.meme_id!==id));\n           console.log(deleteMeme);\n        }catch(err){\n            console.error(err.message);\n        }\n    }\n\n    const getmemes = async () => {\n       try {\n        const response = await fetch(\"http://localhost:5000/memes\");\n        const jsonData = await response.json();\n\n        setMemes(jsonData);\n        // console.log(jsonData);\n       } catch(err){\n           console.error(err.message);\n       }\n    };\n    useEffect(()=>{\n        getmemes();\n    }, []);\n    // console.log(memes);\n\n    const getMemeCard = (meme, idx) => {\n        return (\n            <Fragment>\n            <Grid key = {idx} item xs = {12} sm = {6} lg = {4} >\n                <MemeCard meme={meme}/>\n            </Grid>\n            <h1><Editmemes meme={meme}/></h1>\n            <Grid container justify=\"center\">\n                <Button variant=\"contained\" color=\"primary\" className = {classes.button} endIcon = {<EditIcon />}>\n                   Edit\n                </Button>\n                <Button variant=\"contained\" color=\"secondary\" onClick={()=> deleteMeme(meme.meme_id)} className = {classes.button} endIcon = {<DeleteIcon />}>\n                   Delete\n                </Button>\n            </Grid>\n            </Fragment>\n        );\n    }\n\n    return(\n    <Fragment> \n        {\" \"}\n        <Grid container spacing={2}>\n                {memes.map((meme,idx) =>(getMemeCard(meme,idx)))}\n        </Grid>\n    </Fragment>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}