{"ast":null,"code":"var _jsxFileName = \"/home/abhishekagrawal/devolopement workspace/memes/frontend/src/components/listmemes.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport Editmemes from \"./editmeme\";\nimport { Grid } from \"@material-ui/core\";\nimport MemeCard from \"./memecard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Listmemes() {\n  _s();\n\n  const [memes, setMemes] = useState([]);\n\n  const deleteMeme = async id => {\n    try {\n      const deleteMeme = await fetch(`http://localhost:5000/memes/${id}`, {\n        method: \"DELETE\"\n      });\n      setMemes(memes.filter(meme => meme.meme_id !== id));\n      console.log(deleteMeme);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const getmemes = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/memes\");\n      const jsonData = await response.json();\n      setMemes(jsonData); // console.log(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getmemes();\n  }, []); // console.log(memes);\n\n  const getMemeCard = (meme, idx) => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      lg: 4,\n      children: /*#__PURE__*/_jsxDEV(MemeCard, {\n        meme: meme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: memes.map(meme => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card text-center\",\n        children: [\"getM\", /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: /*#__PURE__*/_jsxDEV(Editmemes, {\n            meme: meme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => deleteMeme(meme.meme_id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this) // </tr>\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Listmemes, \"5gdHCcF3c1u3tVEy6qXr88dpXdk=\");\n\n_c = Listmemes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listmemes\");","map":{"version":3,"sources":["/home/abhishekagrawal/devolopement workspace/memes/frontend/src/components/listmemes.js"],"names":["React","Fragment","useEffect","useState","Editmemes","Grid","MemeCard","Listmemes","memes","setMemes","deleteMeme","id","fetch","method","filter","meme","meme_id","console","log","err","error","message","getmemes","response","jsonData","json","getMemeCard","idx","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,QAAP,MAAoB,YAApB;;AAGA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMO,UAAU,GAAG,MAAMC,EAAN,IAAW;AAC1B,QAAG;AACA,YAAMD,UAAU,GAAG,MAAME,KAAK,CAAE,+BAA8BD,EAAG,EAAnC,EAAqC;AAC/DE,QAAAA,MAAM,EAAE;AADuD,OAArC,CAA9B;AAGAJ,MAAAA,QAAQ,CAACD,KAAK,CAACM,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,OAAL,KAAeL,EAApC,CAAD,CAAR;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ;AACF,KAND,CAMC,OAAMS,GAAN,EAAU;AACPF,MAAAA,OAAO,CAACG,KAAR,CAAcD,GAAG,CAACE,OAAlB;AACH;AACJ,GAVD;;AAYA,QAAMC,QAAQ,GAAG,YAAY;AAC1B,QAAI;AACH,YAAMC,QAAQ,GAAG,MAAMX,KAAK,CAAC,6BAAD,CAA5B;AACA,YAAMY,QAAQ,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAvB;AAEAhB,MAAAA,QAAQ,CAACe,QAAD,CAAR,CAJG,CAKH;AACA,KAND,CAME,OAAML,GAAN,EAAU;AACRF,MAAAA,OAAO,CAACG,KAAR,CAAcD,GAAG,CAACE,OAAlB;AACH;AACH,GAVD;;AAWAnB,EAAAA,SAAS,CAAC,MAAI;AACVoB,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT,CA1BgC,CA6BhC;;AAEA,QAAMI,WAAW,GAAG,CAACX,IAAD,EAAOY,GAAP,KAAe;AAC/B,wBACI,QAAC,IAAD;AAAkB,MAAA,IAAI,MAAtB;AAAuB,MAAA,EAAE,EAAI,EAA7B;AAAiC,MAAA,EAAE,EAAI,CAAvC;AAA0C,MAAA,EAAE,EAAI,CAAhD;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEZ;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ,OAAaY,GAAb;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND;;AAQA,sBACA,QAAC,QAAD;AAAA,eACK,GADL,eAEI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,gBACSnB,KAAK,CAACoB,GAAN,CAAUb,IAAI,iBACP;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,wCAGA;AAAA,iCAAI,QAAC,SAAD;AAAW,YAAA,IAAI,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAHA,eAIA;AAAA,iCACI;AACG,YAAA,SAAS,EAAC,gBADb;AAEG,YAAA,OAAO,EAAE,MAAKL,UAAU,CAACK,IAAI,CAACC,OAAN,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,cADO,CAcX;AAdH;AADT;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAuBH;;GA9DuBT,S;;KAAAA,S","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\nimport Editmemes from \"./editmeme\";\nimport { Grid } from \"@material-ui/core\";\nimport MemeCard from\"./memecard\";\n\n\nexport default function Listmemes() {\n    const [memes, setMemes] = useState([]);\n\n    const deleteMeme = async id =>{\n        try{\n           const deleteMeme = await fetch(`http://localhost:5000/memes/${id}`,{\n               method: \"DELETE\"\n           });\n           setMemes(memes.filter(meme => meme.meme_id!==id));\n           console.log(deleteMeme);\n        }catch(err){\n            console.error(err.message);\n        }\n    }\n\n    const getmemes = async () => {\n       try {\n        const response = await fetch(\"http://localhost:5000/memes\");\n        const jsonData = await response.json();\n\n        setMemes(jsonData);\n        // console.log(jsonData);\n       } catch(err){\n           console.error(err.message);\n       }\n    };\n    useEffect(()=>{\n        getmemes();\n    }, []);\n    // console.log(memes);\n\n    const getMemeCard = (meme, idx) => {\n        return (\n            <Grid key = {idx} item xs = {12} sm = {6} lg = {4} >\n                <MemeCard meme={meme}/>\n            </Grid>\n        )\n    }\n\n    return(\n    <Fragment> \n        {\" \"}\n        <Grid container spacing={2}>\n                {memes.map(meme =>(\n                        <div className=\"card text-center\">\n                        getM\n                        \n                        <h1><Editmemes meme={meme}/></h1>\n                        <h1>\n                            <button \n                               className=\"btn btn-danger\"\n                               onClick={()=> deleteMeme(meme.meme_id)}\n                            >\n                                Delete\n                            </button>\n                        </h1>\n                        </div>\n                    // </tr>\n                ))}\n        </Grid>\n    </Fragment>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}